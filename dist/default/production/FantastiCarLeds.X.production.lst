

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 14:38:39 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14   000000                     
    15                           ; Generated 09/02/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F45K50 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49   000000                     _ANSELB	set	3932
    50   000000                     _ANSELD	set	3934
    51   000000                     _LATB	set	3978
    52   000000                     _LATD	set	3980
    53   000000                     _OSCCONbits	set	4051
    54   000000                     _TRISB	set	3987
    55   000000                     _TRISD	set	3989
    56                           
    57                           ; #config settings
    58                           
    59                           	psect	cinit
    60   007ED8                     __pcinit:
    61                           	callstack 0
    62   007ED8                     start_initialization:
    63                           	callstack 0
    64   007ED8                     __initialization:
    65                           	callstack 0
    66   007ED8                     end_of_initialization:
    67                           	callstack 0
    68   007ED8                     __end_of__initialization:
    69                           	callstack 0
    70   007ED8  0100               	movlb	0
    71   007EDA  EF7E  F03F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74   000001                     __pcstackCOMRAM:
    75                           	callstack 0
    76   000001                     ??_main:
    77   000001                     
    78                           ; 2 bytes @ 0x0
    79   000001                     	ds	2
    80   000003                     main@i:
    81                           	callstack 0
    82                           
    83                           ; 2 bytes @ 0x2
    84   000003                     	ds	2
    85   000005                     main@i_93:
    86                           	callstack 0
    87                           
    88                           ; 2 bytes @ 0x4
    89   000005                     	ds	2
    90                           
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 7 in file "main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;  i               2    4[COMRAM] int 
   101 ;;  i               2    2[COMRAM] int 
   102 ;; Return value:  Size  Location     Type
   103 ;;                  2   27[None  ] int 
   104 ;; Registers used:
   105 ;;		wreg, status,2, status,0, cstack
   106 ;; Tracked objects:
   107 ;;		On entry : 0/0
   108 ;;		On exit  : 0/0
   109 ;;		Unchanged: 0/0
   110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   111 ;;      Params:         0       0       0       0       0       0       0       0       0
   112 ;;      Locals:         4       0       0       0       0       0       0       0       0
   113 ;;      Temps:          2       0       0       0       0       0       0       0       0
   114 ;;      Totals:         6       0       0       0       0       0       0       0       0
   115 ;;Total ram usage:        6 bytes
   116 ;; Hardware stack levels required when called: 1
   117 ;; This function calls:
   118 ;;		_OSCILADOR_Init
   119 ;;		_PORT_Init
   120 ;; This function is called by:
   121 ;;		Startup code after reset
   122 ;; This function uses a non-reentrant model
   123 ;;
   124                           
   125                           	psect	text0
   126   007EFC                     __ptext0:
   127                           	callstack 0
   128   007EFC                     _main:
   129                           	callstack 30
   130   007EFC                     
   131                           ;main.c: 9:     OSCILADOR_Init();
   132   007EFC  EC6F  F03F         	call	_OSCILADOR_Init	;wreg free
   133                           
   134                           ;main.c: 10:     PORT_Init();
   135   007F00  EC74  F03F         	call	_PORT_Init	;wreg free
   136   007F04                     
   137                           ;main.c: 11:     LATD = 0x00;
   138   007F04  0E00               	movlw	0
   139   007F06  6E8C               	movwf	140,c	;volatile
   140   007F08                     
   141                           ;main.c: 12:     LATB = 0x00;
   142   007F08  0E00               	movlw	0
   143   007F0A  6E8A               	movwf	138,c	;volatile
   144   007F0C                     l728:
   145                           
   146                           ;main.c: 19:         for ( int i = 0; i <= 7; i++ ) {
   147   007F0C  0E00               	movlw	0
   148   007F0E  6E04               	movwf	(main@i+1)^0,c
   149   007F10  0E00               	movlw	0
   150   007F12  6E03               	movwf	main@i^0,c
   151   007F14                     l730:
   152   007F14  BE04               	btfsc	(main@i+1)^0,7,c
   153   007F16  EF96  F03F         	goto	u11
   154   007F1A  5004               	movf	(main@i+1)^0,w,c
   155   007F1C  E109               	bnz	u10
   156   007F1E  0E08               	movlw	8
   157   007F20  5C03               	subwf	main@i^0,w,c
   158   007F22  A0D8               	btfss	status,0,c
   159   007F24  EF96  F03F         	goto	u11
   160   007F28  EF98  F03F         	goto	u10
   161   007F2C                     u11:
   162   007F2C  EF9A  F03F         	goto	l734
   163   007F30                     u10:
   164   007F30  EFBA  F03F         	goto	l744
   165   007F34                     l734:
   166                           
   167                           ;main.c: 20:             LATB = 0x00;
   168   007F34  0E00               	movlw	0
   169   007F36  6E8A               	movwf	138,c	;volatile
   170   007F38                     
   171                           ;main.c: 21:             LATD = ( 1 << i );
   172   007F38  C003  F001         	movff	main@i,??_main
   173   007F3C  0E01               	movlw	1
   174   007F3E  6E02               	movwf	(??_main+1)^0,c
   175   007F40  2A01               	incf	??_main^0,f,c
   176   007F42  EFA5  F03F         	goto	u24
   177   007F46                     u25:
   178   007F46  90D8               	bcf	status,0,c
   179   007F48  3602               	rlcf	(??_main+1)^0,f,c
   180   007F4A                     u24:
   181   007F4A  2E01               	decfsz	??_main^0,f,c
   182   007F4C  EFA3  F03F         	goto	u25
   183   007F50  5002               	movf	(??_main+1)^0,w,c
   184   007F52  6E8C               	movwf	140,c	;volatile
   185   007F54                     
   186                           ;main.c: 22:             _delay((unsigned long)((100)*(16000000UL/4000.0)));
   187   007F54  0E03               	movlw	3
   188   007F56  6E02               	movwf	(??_main+1)^0,c
   189   007F58  0E08               	movlw	8
   190   007F5A  6E01               	movwf	??_main^0,c
   191   007F5C  0E77               	movlw	119
   192   007F5E                     u57:
   193   007F5E  2EE8               	decfsz	wreg,f,c
   194   007F60  D7FE               	bra	u57
   195   007F62  2E01               	decfsz	??_main^0,f,c
   196   007F64  D7FC               	bra	u57
   197   007F66  2E02               	decfsz	(??_main+1)^0,f,c
   198   007F68  D7FA               	bra	u57
   199   007F6A  F000               	nop	
   200   007F6C                     
   201                           ;main.c: 23:         }
   202   007F6C  4A03               	infsnz	main@i^0,f,c
   203   007F6E  2A04               	incf	(main@i+1)^0,f,c
   204   007F70  EF8A  F03F         	goto	l730
   205   007F74                     l744:
   206                           
   207                           ;main.c: 25:         for ( int i = 0; i <= 7; i++ ) {
   208   007F74  0E00               	movlw	0
   209   007F76  6E06               	movwf	(main@i_93+1)^0,c
   210   007F78  0E00               	movlw	0
   211   007F7A  6E05               	movwf	main@i_93^0,c
   212   007F7C                     l746:
   213   007F7C  BE06               	btfsc	(main@i_93+1)^0,7,c
   214   007F7E  EFCA  F03F         	goto	u31
   215   007F82  5006               	movf	(main@i_93+1)^0,w,c
   216   007F84  E109               	bnz	u30
   217   007F86  0E08               	movlw	8
   218   007F88  5C05               	subwf	main@i_93^0,w,c
   219   007F8A  A0D8               	btfss	status,0,c
   220   007F8C  EFCA  F03F         	goto	u31
   221   007F90  EFCC  F03F         	goto	u30
   222   007F94                     u31:
   223   007F94  EFCE  F03F         	goto	l750
   224   007F98                     u30:
   225   007F98  EFEE  F03F         	goto	l760
   226   007F9C                     l750:
   227                           
   228                           ;main.c: 26:             LATD = 0x00;
   229   007F9C  0E00               	movlw	0
   230   007F9E  6E8C               	movwf	140,c	;volatile
   231   007FA0                     
   232                           ;main.c: 27:             LATB = ( 1 << i );
   233   007FA0  C005  F001         	movff	main@i_93,??_main
   234   007FA4  0E01               	movlw	1
   235   007FA6  6E02               	movwf	(??_main+1)^0,c
   236   007FA8  2A01               	incf	??_main^0,f,c
   237   007FAA  EFD9  F03F         	goto	u44
   238   007FAE                     u45:
   239   007FAE  90D8               	bcf	status,0,c
   240   007FB0  3602               	rlcf	(??_main+1)^0,f,c
   241   007FB2                     u44:
   242   007FB2  2E01               	decfsz	??_main^0,f,c
   243   007FB4  EFD7  F03F         	goto	u45
   244   007FB8  5002               	movf	(??_main+1)^0,w,c
   245   007FBA  6E8A               	movwf	138,c	;volatile
   246   007FBC                     
   247                           ;main.c: 28:             _delay((unsigned long)((100)*(16000000UL/4000.0)));
   248   007FBC  0E03               	movlw	3
   249   007FBE  6E02               	movwf	(??_main+1)^0,c
   250   007FC0  0E08               	movlw	8
   251   007FC2  6E01               	movwf	??_main^0,c
   252   007FC4  0E77               	movlw	119
   253   007FC6                     u67:
   254   007FC6  2EE8               	decfsz	wreg,f,c
   255   007FC8  D7FE               	bra	u67
   256   007FCA  2E01               	decfsz	??_main^0,f,c
   257   007FCC  D7FC               	bra	u67
   258   007FCE  2E02               	decfsz	(??_main+1)^0,f,c
   259   007FD0  D7FA               	bra	u67
   260   007FD2  F000               	nop	
   261   007FD4                     
   262                           ;main.c: 29:         }
   263   007FD4  4A05               	infsnz	main@i_93^0,f,c
   264   007FD6  2A06               	incf	(main@i_93+1)^0,f,c
   265   007FD8  EFBE  F03F         	goto	l746
   266   007FDC                     l760:
   267                           
   268                           ;main.c: 31:         _delay((unsigned long)((200)*(16000000UL/4000.0)));
   269   007FDC  0E05               	movlw	5
   270   007FDE  6E02               	movwf	(??_main+1)^0,c
   271   007FE0  0E0F               	movlw	15
   272   007FE2  6E01               	movwf	??_main^0,c
   273   007FE4  0EF1               	movlw	241
   274   007FE6                     u77:
   275   007FE6  2EE8               	decfsz	wreg,f,c
   276   007FE8  D7FE               	bra	u77
   277   007FEA  2E01               	decfsz	??_main^0,f,c
   278   007FEC  D7FC               	bra	u77
   279   007FEE  2E02               	decfsz	(??_main+1)^0,f,c
   280   007FF0  D7FA               	bra	u77
   281   007FF2  F000               	nop	
   282   007FF4                     
   283                           ;main.c: 33:         LATD = 0xff;
   284   007FF4  688C               	setf	140,c	;volatile
   285   007FF6                     
   286                           ;main.c: 34:         LATB = 0xff;
   287   007FF6  688A               	setf	138,c	;volatile
   288   007FF8  EF86  F03F         	goto	l728
   289   007FFC  EF00  F000         	goto	start
   290   008000                     __end_of_main:
   291                           	callstack 0
   292                           
   293 ;; *************** function _PORT_Init *****************
   294 ;; Defined at:
   295 ;;		line 45 in file "main.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   309 ;;      Params:         0       0       0       0       0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0       0       0       0       0
   312 ;;      Totals:         0       0       0       0       0       0       0       0       0
   313 ;;Total ram usage:        0 bytes
   314 ;; Hardware stack levels used: 1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text1
   323   007EE8                     __ptext1:
   324                           	callstack 0
   325   007EE8                     _PORT_Init:
   326                           	callstack 30
   327   007EE8                     
   328                           ;main.c: 47:     ANSELD = 0x00;
   329   007EE8  0E00               	movlw	0
   330   007EEA  010F               	movlb	15	; () banked
   331   007EEC  6F5E               	movwf	94,b	;volatile
   332                           
   333                           ;main.c: 48:     ANSELB = 0x00;
   334   007EEE  0E00               	movlw	0
   335   007EF0  6F5C               	movwf	92,b	;volatile
   336                           
   337                           ;main.c: 49:     TRISD = 0x00;
   338   007EF2  0E00               	movlw	0
   339   007EF4  6E95               	movwf	149,c	;volatile
   340                           
   341                           ;main.c: 50:     TRISB = 0x00;
   342   007EF6  0E00               	movlw	0
   343   007EF8  6E93               	movwf	147,c	;volatile
   344   007EFA                     
   345                           ; BSR set to: 15
   346   007EFA  0012               	return		;funcret
   347   007EFC                     __end_of_PORT_Init:
   348                           	callstack 0
   349                           
   350 ;; *************** function _OSCILADOR_Init *****************
   351 ;; Defined at:
   352 ;;		line 5 in file "librerias_pic/config_device.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, status,2
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   366 ;;      Params:         0       0       0       0       0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0
   369 ;;      Totals:         0       0       0       0       0       0       0       0       0
   370 ;;Total ram usage:        0 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           	psect	text2
   380   007EDE                     __ptext2:
   381                           	callstack 0
   382   007EDE                     _OSCILADOR_Init:
   383                           	callstack 30
   384   007EDE                     
   385                           ;librerias_pic/config_device.c: 7:     OSCCONbits.IRCF = 0b111;
   386   007EDE  0E70               	movlw	112
   387   007EE0  12D3               	iorwf	211,f,c	;volatile
   388   007EE2                     
   389                           ;librerias_pic/config_device.c: 8:     OSCCONbits.SCS0 = 0;
   390   007EE2  90D3               	bcf	211,0,c	;volatile
   391   007EE4                     
   392                           ;librerias_pic/config_device.c: 9:     OSCCONbits.SCS1 = 1;
   393   007EE4  82D3               	bsf	211,1,c	;volatile
   394   007EE6  0012               	return		;funcret
   395   007EE8                     __end_of_OSCILADOR_Init:
   396                           	callstack 0
   397   000000                     
   398                           	psect	rparam
   399   000000                     
   400                           	psect	idloc
   401                           
   402                           ;Config register IDLOC0 @ 0x200000
   403                           ;	unspecified, using default values
   404   200000                     	org	2097152
   405   200000  FF                 	db	255
   406                           
   407                           ;Config register IDLOC1 @ 0x200001
   408                           ;	unspecified, using default values
   409   200001                     	org	2097153
   410   200001  FF                 	db	255
   411                           
   412                           ;Config register IDLOC2 @ 0x200002
   413                           ;	unspecified, using default values
   414   200002                     	org	2097154
   415   200002  FF                 	db	255
   416                           
   417                           ;Config register IDLOC3 @ 0x200003
   418                           ;	unspecified, using default values
   419   200003                     	org	2097155
   420   200003  FF                 	db	255
   421                           
   422                           ;Config register IDLOC4 @ 0x200004
   423                           ;	unspecified, using default values
   424   200004                     	org	2097156
   425   200004  FF                 	db	255
   426                           
   427                           ;Config register IDLOC5 @ 0x200005
   428                           ;	unspecified, using default values
   429   200005                     	org	2097157
   430   200005  FF                 	db	255
   431                           
   432                           ;Config register IDLOC6 @ 0x200006
   433                           ;	unspecified, using default values
   434   200006                     	org	2097158
   435   200006  FF                 	db	255
   436                           
   437                           ;Config register IDLOC7 @ 0x200007
   438                           ;	unspecified, using default values
   439   200007                     	org	2097159
   440   200007  FF                 	db	255
   441                           
   442                           	psect	config
   443                           
   444                           ;Config register CONFIG1L @ 0x300000
   445                           ;	PLL Selection
   446                           ;	PLLSEL = PLL4X, 4x clock multiplier
   447                           ;	PLL Enable Configuration bit
   448                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   449                           ;	CPU System Clock Postscaler
   450                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   451                           ;	Low Speed USB mode with 48 MHz system clock
   452                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   453   300000                     	org	3145728
   454   300000  00                 	db	0
   455                           
   456                           ;Config register CONFIG1H @ 0x300001
   457                           ;	Oscillator Selection
   458                           ;	FOSC = INTOSCIO, Internal oscillator
   459                           ;	Primary Oscillator Shutdown
   460                           ;	PCLKEN = ON, Primary oscillator enabled
   461                           ;	Fail-Safe Clock Monitor
   462                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   463                           ;	Internal/External Oscillator Switchover
   464                           ;	IESO = OFF, Oscillator Switchover mode disabled
   465   300001                     	org	3145729
   466   300001  28                 	db	40
   467                           
   468                           ;Config register CONFIG2L @ 0x300002
   469                           ;	Power-up Timer Enable
   470                           ;	nPWRTEN = ON, Power up timer enabled
   471                           ;	Brown-out Reset Enable
   472                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   473                           ;	Brown-out Reset Voltage
   474                           ;	BORV = 190, BOR set to 1.9V nominal
   475                           ;	Low-Power Brown-out Reset
   476                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   477   300002                     	org	3145730
   478   300002  5E                 	db	94
   479                           
   480                           ;Config register CONFIG2H @ 0x300003
   481                           ;	Watchdog Timer Enable bits
   482                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   483                           ;	Watchdog Timer Postscaler
   484                           ;	WDTPS = 32768, 1:32768
   485   300003                     	org	3145731
   486   300003  3C                 	db	60
   487                           
   488                           ; Padding undefined space
   489   300004                     	org	3145732
   490   300004  FF                 	db	255
   491                           
   492                           ;Config register CONFIG3H @ 0x300005
   493                           ;	CCP2 MUX bit
   494                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   495                           ;	PORTB A/D Enable bit
   496                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   497                           ;	Timer3 Clock Input MUX bit
   498                           ;	T3CMX = RC0, T3CKI function is on RC0
   499                           ;	SDO Output MUX bit
   500                           ;	SDOMX = RB3, SDO function is on RB3
   501                           ;	Master Clear Reset Pin Enable
   502                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   503   300005                     	org	3145733
   504   300005  D3                 	db	211
   505                           
   506                           ;Config register CONFIG4L @ 0x300006
   507                           ;	Stack Full/Underflow Reset
   508                           ;	STVREN = ON, Stack full/underflow will cause Reset
   509                           ;	Single-Supply ICSP Enable bit
   510                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   511                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   512                           ;	ICPRT = OFF, ICPORT disabled
   513                           ;	Extended Instruction Set Enable bit
   514                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   515                           ;	Background Debugger Enable bit
   516                           ;	DEBUG = 0x1, unprogrammed default
   517   300006                     	org	3145734
   518   300006  85                 	db	133
   519                           
   520                           ; Padding undefined space
   521   300007                     	org	3145735
   522   300007  FF                 	db	255
   523                           
   524                           ;Config register CONFIG5L @ 0x300008
   525                           ;	Block 0 Code Protect
   526                           ;	CP0 = OFF, Block 0 is not code-protected
   527                           ;	Block 1 Code Protect
   528                           ;	CP1 = OFF, Block 1 is not code-protected
   529                           ;	Block 2 Code Protect
   530                           ;	CP2 = OFF, Block 2 is not code-protected
   531                           ;	Block 3 Code Protect
   532                           ;	CP3 = OFF, Block 3 is not code-protected
   533   300008                     	org	3145736
   534   300008  0F                 	db	15
   535                           
   536                           ;Config register CONFIG5H @ 0x300009
   537                           ;	Boot Block Code Protect
   538                           ;	CPB = OFF, Boot block is not code-protected
   539                           ;	Data EEPROM Code Protect
   540                           ;	CPD = OFF, Data EEPROM is not code-protected
   541   300009                     	org	3145737
   542   300009  C0                 	db	192
   543                           
   544                           ;Config register CONFIG6L @ 0x30000A
   545                           ;	Block 0 Write Protect
   546                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   547                           ;	Block 1 Write Protect
   548                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   549                           ;	Block 2 Write Protect
   550                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   551                           ;	Block 3 Write Protect
   552                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   553   30000A                     	org	3145738
   554   30000A  0F                 	db	15
   555                           
   556                           ;Config register CONFIG6H @ 0x30000B
   557                           ;	Configuration Registers Write Protect
   558                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   559                           ;	Boot Block Write Protect
   560                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   561                           ;	Data EEPROM Write Protect
   562                           ;	WRTD = OFF, Data EEPROM is not write-protected
   563   30000B                     	org	3145739
   564   30000B  E0                 	db	224
   565                           
   566                           ;Config register CONFIG7L @ 0x30000C
   567                           ;	Block 0 Table Read Protect
   568                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   569                           ;	Block 1 Table Read Protect
   570                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   571                           ;	Block 2 Table Read Protect
   572                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   573                           ;	Block 3 Table Read Protect
   574                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   575   30000C                     	org	3145740
   576   30000C  0F                 	db	15
   577                           
   578                           ;Config register CONFIG7H @ 0x30000D
   579                           ;	Boot Block Table Read Protect
   580                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   581   30000D                     	org	3145741
   582   30000D  40                 	db	64
   583                           tosu	equ	0xFFF
   584                           tosh	equ	0xFFE
   585                           tosl	equ	0xFFD
   586                           stkptr	equ	0xFFC
   587                           pclatu	equ	0xFFB
   588                           pclath	equ	0xFFA
   589                           pcl	equ	0xFF9
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           prodh	equ	0xFF4
   595                           prodl	equ	0xFF3
   596                           indf0	equ	0xFEF
   597                           postinc0	equ	0xFEE
   598                           postdec0	equ	0xFED
   599                           preinc0	equ	0xFEC
   600                           plusw0	equ	0xFEB
   601                           fsr0h	equ	0xFEA
   602                           fsr0l	equ	0xFE9
   603                           wreg	equ	0xFE8
   604                           indf1	equ	0xFE7
   605                           postinc1	equ	0xFE6
   606                           postdec1	equ	0xFE5
   607                           preinc1	equ	0xFE4
   608                           plusw1	equ	0xFE3
   609                           fsr1h	equ	0xFE2
   610                           fsr1l	equ	0xFE1
   611                           bsr	equ	0xFE0
   612                           indf2	equ	0xFDF
   613                           postinc2	equ	0xFDE
   614                           postdec2	equ	0xFDD
   615                           preinc2	equ	0xFDC
   616                           plusw2	equ	0xFDB
   617                           fsr2h	equ	0xFDA
   618                           fsr2l	equ	0xFD9
   619                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0      90
                                              0 COMRAM     6     6      0
                     _OSCILADOR_Init
                          _PORT_Init
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILADOR_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILADOR_Init
   _PORT_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRlhh        3D      0       0      21        0.0%
BITBIGSFRlhlh        1      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      23        0.0%
BITBIGSFRllh         1      0       0      24        0.0%
BITBIGSFRlllh       2B      0       0      25        0.0%
BITBIGSFRllllh       1      0       0      26        0.0%
BITBIGSFRlllll       9      0       0      27        0.0%
ABS                  0      0       0      28        0.0%
BIGRAM             7FF      0       0      29        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 14:38:39 2023

                      l5 7EE6                       l38 7EFA                       u10 7F30  
                     u11 7F2C                       u30 7F98                       u31 7F94  
                     u24 7F4A                       u25 7F46                       u44 7FB2  
                     u45 7FAE                       u57 7F5E                       u67 7FC6  
                     u77 7FE6                      l720 7EE8                      l714 7EDE  
                    l730 7F14                      l722 7EFC                      l716 7EE2  
                    l740 7F6C                      l724 7F04                      l718 7EE4  
                    l750 7F9C                      l734 7F34                      l726 7F08  
                    l752 7FA0                      l760 7FDC                      l736 7F38  
                    l744 7F74                      l728 7F0C                      l762 7FF4  
                    l754 7FBC                      l746 7F7C                      l738 7F54  
                    l764 7FF6                      l756 7FD4                      wreg 000FE8  
                   _LATB 000F8A                     _LATD 000F8C                     _main 7EFC  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  _TRISB 000F93                    _TRISD 000F95                    main@i 0003  
                  status 000FD8          __initialization 7ED8             __end_of_main 8000  
                 ??_main 0001            __activetblptr 000000         ??_OSCILADOR_Init 0001  
                 _ANSELB 000F5C                   _ANSELD 000F5E        __end_of_PORT_Init 7EFC  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7ED8  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7ED8                  __ramtop 0800  
                __ptext0 7EFC                  __ptext1 7EE8                  __ptext2 7EDE  
   end_of_initialization 7ED8                _PORT_Init 7EE8               ?_PORT_Init 0001  
    start_initialization 7ED8              ??_PORT_Init 0001           _OSCILADOR_Init 7EDE  
               __Hrparam 0000                 __Lrparam 0000   __end_of_OSCILADOR_Init 7EE8  
               isa$xinst 000000                 main@i_93 0005          ?_OSCILADOR_Init 0001  
             _OSCCONbits 000FD3  
